From 06588060470e305b388e2e862c739b25241d2bcf Mon Sep 17 00:00:00 2001
From: Scott Ware <scott.r.ware@intel.com>
Date: Wed, 26 Jan 2022 20:42:49 +0000
Subject: [PATCH] Skip building the main library

Signed-off-by: Scott Ware <scott.r.ware@intel.com>
---
 CMakeLists.txt                 | 20 --------------------
 wrappers/python/CMakeLists.txt | 13 +++++++++++--
 2 files changed, 11 insertions(+), 22 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 902e549..a864fa7 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -47,30 +47,10 @@ os_set_flags()
 # macro definition located at "CMake/global_config.cmake"
 global_set_flags()
 
-if(BUILD_SHARED_LIBS)
-    add_library(${LRS_TARGET} SHARED "")
-else()
-    add_library(${LRS_TARGET} STATIC "")
-endif()
-
-# set library version
-set_target_properties(${LRS_TARGET} PROPERTIES VERSION ${REALSENSE_VERSION_STRING} SOVERSION "${REALSENSE_VERSION_MAJOR}.${REALSENSE_VERSION_MINOR}")
-
-include(include/CMakeLists.txt)
-include(src/CMakeLists.txt)
-include(third-party/CMakeLists.txt)
-include(common/utilities/CMakeLists.txt)
-
 # configure the project according to OS specific requirments
 # macro definition located at "CMake/<OS>_config.cmake"
 os_target_config()
 
-# global project configuration
-# macro definition located at "CMake/global_config.cmake"
-global_target_config()
-
-include(CMake/install_config.cmake)
-
 add_subdirectory(wrappers)
 if ( ( BUILD_EXAMPLES OR BUILD_PC_STITCHING ) AND BUILD_GLSL_EXTENSIONS )
     find_package(glfw3 3.3 QUIET)
diff --git a/wrappers/python/CMakeLists.txt b/wrappers/python/CMakeLists.txt
index 0c2f416..8edfc83 100644
--- a/wrappers/python/CMakeLists.txt
+++ b/wrappers/python/CMakeLists.txt
@@ -7,7 +7,16 @@ if (NOT BUILD_PYTHON_BINDINGS)
     message(WARNING "Python Bindings being built despite unset option because they are required for python documentation")
 endif()
 
-set(DEPENDENCIES realsense2)
+find_package(PkgConfig)
+if(NOT PKG_CONFIG_FOUND)
+    message(FATAL_ERROR "\n\n PkgConfig package is missing!\n\n")
+endif()
+
+pkg_search_module(REALSENSE2 REQUIRED realsense2)
+if(NOT REALSENSE2_FOUND)
+    message( FATAL_ERROR "Failed to find realsense2" )
+endif()
+
 # In order for the external project clone to occur during cmake configure step(rather than during compilation, as would normally happen),
 # we copy the external project declaration to the build folder and then execute it
 configure_file(${CMAKE_SOURCE_DIR}/third-party/pybind11/CMakeLists.txt ${CMAKE_BINARY_DIR}/external-projects/pybind11/CMakeLists.txt)
@@ -65,7 +74,7 @@ else()
   set(CMAKECONFIG_PY_INSTALL_DIR "${CMAKE_INSTALL_LIBDIR}/cmake/pyrealsense2")
 endif()
 
-target_link_libraries(pyrealsense2 PRIVATE ${DEPENDENCIES})
+target_link_libraries(pyrealsense2 PRIVATE ${REALSENSE2_LIBRARIES})
 set_target_properties(pyrealsense2 PROPERTIES VERSION
     ${REALSENSE_VERSION_STRING} SOVERSION "${REALSENSE_VERSION_MAJOR}.${REALSENSE_VERSION_MINOR}")
 set_target_properties(pyrealsense2 PROPERTIES FOLDER Wrappers/python)
-- 
2.7.4

